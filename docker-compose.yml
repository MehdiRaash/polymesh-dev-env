version: "3.8"

services:
  chain:
    image: ${CHAIN_IMAGE}
    container_name: chain
    user: root
    restart: unless-stopped
    volumes:
      - /Users/mehdiraash/Chain/:/Users/mehdiraash/Chain
    extra_hosts:
      - 'host.docker.internal:host-gateway'

    command:
      - --chain
      - testnet
      - --base-path
      - /Users/mehdiraash/Chain
      - --rpc-external
      - --rpc-cors
      - all
      - --ws-external
      - --prometheus-external
      - --name
      - Tzi
      - --unsafe-ws-external 
      - --unsafe-rpc-external
      - --wasm-execution
      - compiled
      - --no-prometheus
      - --no-mdns
      - --rpc-methods
      - unsafe
      - --force-authoring
      - --port 
      - '30000' 

  postgres:
    image: postgres:12-alpine
    restart: unless-stopped
    ports:
      - ${PG_PORT:-5432}:5432
    volumes:
      - "./mounts/pg-load-extensions.sh:/docker-entrypoint-initdb.d/load-extensions.sh"
    environment:
      POSTGRES_PASSWORD: postgres

  rest-api:
    image: ${REST_IMAGE}
    init: true
    restart: unless-stopped
    depends_on:
      - chain
      - graphql
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - ${REST_PORT:-3004}:3000
    environment:
      POLYMESH_NODE_URL: "ws://chain:9944"
      POLYMESH_MIDDLEWARE_V2_URL: "http://graphql:3000"
      LOCAL_SIGNERS: "alice,bob,charlie"
      LOCAL_MNEMONICS: "//Alice,//Bob,//Charlie"
      AUTH_STRATEGY: "open"
      DEVELOPER_UTILS: "true"

  subquery:
    image: "${SUBQUERY_IMAGE}"
    init: true
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:3000/meta || exit 1
      interval: 20s
      retries: 10
      start_period: 20s
      timeout: 10s
    depends_on:
      - "postgres"
    environment:
      NETWORK_ENDPOINT: ws://chain:9944
      NETWORK_HTTP_ENDPOINT: http://chain:9933
      START_BLOCK: 1
      NO_NATIVE_GRAPHQL_DATA: 'TRUE'
      NETWORK_CHAIN_ID: "0x2ace05e703aa50b48c0ccccfc8b424f7aab9a1e2c424ed12e45d20b1e8ffd0d6"
      DB_USER: "${PG_USER:-postgres}"
      DB_PASS: "${PG_PASSWORD:-postgres}"
      DB_DATABASE: "${PG_DB:-postgres}"
      DB_PORT: "${PG_PORT:-5432}"
      DB_HOST: "${PG_HOST:-postgres}"
      NODE_ENV: local
      TINI_SUBREAPER: true
    command:
      - -s
      - --batch-size=500
      - -f=/app
      - --store-flush-interval=0  

  graphql:
    image: onfinality/subql-query:v1.0.0
    ports:
      - ${SQ_PORT:-3001}:3000
    depends_on:
      postgres:
        condition: service_started
      subquery:
        condition: service_healthy
    environment:
      DB_DATABASE: postgres
      DB_USER: "${PG_USER:-postgres}"
      DB_PASS: "${PG_PASSWORD:-postgres}"
      DB_PORT: "${PG_PORT:-5432}"
      DB_HOST: "${PG_HOST:-postgres}"
    command:
      - --name=public
      - --playground
      - --indexer=http://subquery:3000
# volumes:
#   polymesh-vault-volume:
#     external: true
